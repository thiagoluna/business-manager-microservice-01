version: '3'

services:

  app:
    build: .
    container_name: micro01-app
    entrypoint: dockerize -template ./.docker/app/.env:.env -wait tcp://db:3306 -timeout 40s ./.docker/entrypoint.sh
    environment:
      - _DB_HOST=db
      - _DB_DATABASE=micro01
      - _DB_USERNAME=root
      - _DB_PASSWORD=root
      - _REDIS_HOST=micro01-redis
      - _MAIL_DRIVER=smtp
      - _MAIL_HOST=smtp.gmail.com
      - _MAIL_PORT=587
      - _MAIL_USERNAME=
      - _MAIL_PASSWORD=
      - _MAIL_ENCRYPTION=tls
      - _RABBITMQ_HOST=cattle.rmq2.cloudamqp.com
      - _RABBITMQ_PORT=5672
      - _RABBITMQ_USER=
      - _RABBITMQ_PASSWORD=
      - _RABBITMQ_VHOST=
      - _RABBITMQ_QUEUE=admin_queue
    volumes:
      - .:/var/www
    networks:
      - app-network
    depends_on:
      - db
      - redis
      - worker

  nginx:
    build: .docker/nginx
    container_name: micro01-nginx
    restart: always
    tty: true
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
    networks:
      - app-network
    depends_on:
      - app

  db:
    build: ./.docker/mysql
    container_name: micro01-db
    restart: always
    tty: true
    ports:
      - "33006:3306"
    volumes:
      - ./.docker/dbdata:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=micro01
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_ROOT_USER=root
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: micro01-redis
    networks:
      - app-network

  worker:
    build: .
    container_name: micro01-worker
    entrypoint: dockerize -template ./.docker/app/.env:.env -wait tcp://db:3306 -timeout 40s ./.docker/entrypoint.worker.sh
    environment:
      - _DB_HOST=db
      - _DB_DATABASE=micro01
      - _DB_USERNAME=root
      - _DB_PASSWORD=root
      - _REDIS_HOST=micro01-redis
      - _MAIL_DRIVER=smtp
      - _MAIL_HOST=smtp.gmail.com
      - _MAIL_PORT=587
      - _MAIL_USERNAME=thiagoluna2@gmail.com
      - _MAIL_PASSWORD=lribqbqcccvrlrjb
      - _MAIL_ENCRYPTION=tls
    restart: unless-stopped
    volumes:
      - .:/var/www
    networks:
      - app-network
    depends_on:
      - db
      - redis

networks:
  app-network:
    driver: bridge
